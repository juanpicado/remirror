name: Node CI

on:
  schedule:
    - cron: '0 0 * * *'

  push:
    branches:
      - main
      - next
      - 'changeset-release/main'
      - 'changeset-release/next'

  pull_request:
    branches:
      - main
      - next

env:
  CI: true
  PNPM_VERSION: 5.3.0
  PNPM_CACHE_FOLDER: .pnpm-store

jobs:
  # Update package versions from changesets.
  version:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/next' && github.repository == 'remirror/remirror'
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install pnpm
        run: npm install pnpm@5.4.6 -g

      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: audit dependencies
        run: pnpm audit --audit-level high

      - name: install dependencies
        run: pnpm install

      - name: build project
        run: pnpm build

      - name: create versions
        uses: changesets/action@master
        with:
          version: pnpm ci:version
          commit: 'chore: update versions'
          title: 'chore: update versions'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Lint the project
  lint:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install pnpm
        run: npm install pnpm@5.4.6 -g

      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: audit dependencies
        run: pnpm audit --audit-level high

      - name: install dependencies
        run: pnpm install

      - name: lint files
        run: pnpm lint

  # Typecheck the project
  typecheck:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install pnpm
        run: npm install pnpm@5.4.6 -g

      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: audit dependencies
        run: pnpm audit --audit-level high

      - name: install dependencies
        run: pnpm install

      - name: typecheck project
        run: pnpm typecheck

  # Unit test and update coverage report
  unit_test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install pnpm
        run: npm install pnpm@5.4.6 -g

      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: audit dependencies
        run: pnpm audit --audit-level high

      - name: install dependencies
        run: pnpm install

      - name: run unit tests
        run: pnpm test

      - name: publish code coverage report
        uses: paambaati/codeclimate-action@v2.4.0
        if: github.ref == 'refs/heads/main'
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: 'echo Coverage'
          debug: false

  # Build the project and run tests on built files.
  build_test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
      fail-fast: false

    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}

      - name: install pnpm
        run: npm install pnpm@5.4.6 -g

      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: audit dependencies
        run: pnpm audit --audit-level high

      - name: install dependencies
        run: pnpm install

      - name: build project
        run: pnpm build

      - name: run unit tests
        run: pnpm test:build

  # Check that package sizes are within their boundaries
  size_check:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install pnpm
        run: npm install pnpm@5.4.6 -g

      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: audit dependencies
        run: pnpm audit --audit-level high

      - name: install dependencies
        run: pnpm install

      - name: build project
        run: pnpm build

      - name: check sizes
        run: pnpm size

  # Check that all api changes have been captured in the `support/api` folder.
  api_check:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install pnpm
        run: npm install pnpm@5.4.6 -g

      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: audit dependencies
        run: pnpm audit --audit-level high

      - name: install dependencies
        run: pnpm install

      - name: build project
        run: pnpm build

      - name: check api
        run: pnpm api

  # Run chromium e2e tests with playwright
  chromium_e2e:
    timeout-minutes: 15
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false

    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install pnpm
        run: npm install pnpm@5.4.6 -g

      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: audit dependencies
        run: pnpm audit --audit-level high

      - name: install dependencies
        run: pnpm install

      - name: build project
        run: pnpm build

      - name: chrome integration test ${{ matrix.os }}
        run: cd support/e2e && pnpm chromium

  # Run firefox e2e tests with playwright
  firefox_e2e:
    timeout-minutes: 15
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false

    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install pnpm
        run: npm install pnpm@5.4.6 -g

      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: audit dependencies
        run: pnpm audit --audit-level high

      - name: install dependencies
        run: pnpm install

      - name: build project
        run: pnpm build

      - name: firefox integration test ${{ matrix.os }}
        run: cd support/e2e && pnpm firefox

  # Publish the public packages if all tests pass
  publish:
    timeout-minutes: 20
    needs: [lint, typecheck, unit_test, build_test, size_check, chromium_e2e, firefox_e2e]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/next' && github.repository == 'remirror/remirror'

    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install pnpm
        run: npm install pnpm@5.4.6 -g

      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: audit dependencies
        run: pnpm audit --audit-level high

      - name: install dependencies
        run: pnpm install

      - name: build project
        run: pnpm build

      - name: publish npm release
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > $HOME/.npmrc
          pnpm release
          rm $HOME/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
